upstream app {
    server unix:///opt/pgpchan/run/uwsgi.sock;
}

server {
    server_name pgpchan.org www.pgpchan.org;
    return 301 https://pgpchan.org$request_uri;
}

limit_req_status 429;
limit_req_zone $binary_remote_addr zone=pgpchan_post:10m rate=1r/m;

server {
    listen 443 spdy ssl;
    server_name pgpchan.org;
    charset utf-8;

    access_log /opt/pgpchan/logs/http.log  main;
    error_log /opt/pgpchan/logs/http.err.log;

    keepalive_timeout 5;
    client_max_body_size 3M;

    recursive_error_pages on;
    error_page 413 = /error/413/;
    error_page 429 = /error/429/;
    error_page 550 = @post;
    if ($request_method = 'POST') {
        return 550;
    }
    location / {
        root /opt/pgpchan/pgpchan/public_root;
        try_files $uri @app;
    }
    location /static {
        alias /opt/pgpchan/pgpchan/static;
        add_header Cache-Control "public";
        add_header Access-Control-Allow-Origin "*";
        expires 7d;
    }
    location @app {
        include uwsgi_params;
        uwsgi_pass app;
    }
    location @post {
        limit_req zone=pgpchan_post nodelay;
        include uwsgi_params;
        uwsgi_pass app;
    }

    ssl_certificate /path/to/signed_cert_plus_intermediates;
    ssl_certificate_key /path/to/private_key;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    resolver 208.67.222.222 208.67.220.220 valid=300s;
    resolver_timeout 10s;
}

server {
    listen 443 spdy ssl;
    server_name www.pgpchan.org;
    return 301 https://pgpchan.org$request_uri;
}
